import org.springframework.boot.gradle.tasks.run.BootRun

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id "org.jetbrains.kotlin.plugin.spring" version "${kotlinVersion}"
    id "org.springframework.boot" version "${springBootVersion}"
    id "io.spring.dependency-management"
    id "application"
}

group = serviceGroup
version = servicesVersion
sourceCompatibility = 1.8

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
    implementation "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    implementation "io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
    implementation "io.ktor:ktor-client-core:${ktorVersion}"
    implementation "io.ktor:ktor-utils-jvm:${ktorVersion}"
    implementation "io.ktor:ktor-client-apache:${ktorVersion}"
    implementation "io.ktor:ktor-client-logging-jvm:${ktorVersion}"
    runtimeOnly "org.postgresql:postgresql:${postgresSqlVersion}"
    runtimeOnly "com.h2database:h2:${h2DbVersion}"
    testImplementation(enforcedPlatform("org.junit:junit-bom:${junitJupiterVersion}"))
    testImplementation("org.junit.jupiter:junit-jupiter")
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.java.srcDirs += 'src/main/kotlin'
}

task wrapper(type: Wrapper) {
    gradleVersion = '6.4'
}

bootJar {
    enabled = true
    mainClassName = 'com.tghcastro.gullveig.transactions.service.TransactionsServiceApplication'
}


jar {
    enabled = false
    manifest {
        attributes 'Main-Class': 'com.tghcastro.gullveig.transactions.service.TransactionsServiceApplication'
    }
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = sourceCompatibility
}
compileTestKotlin {
    kotlinOptions.jvmTarget = sourceCompatibility
}